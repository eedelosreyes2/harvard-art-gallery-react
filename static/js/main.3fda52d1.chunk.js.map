{"version":3,"sources":["components/Header.js","components/WorksContext.js","components/Works.js","components/ModesContext.js","App.js","index.js"],"names":["Header","props","useState","id","title","list","tabs","showLists","currentId","currentList","lists","setLists","mode","width","dimensions","windowWidth","tabsDom","i","push","className","key","onClick","handleDropDown","placeholder","inputStyle","style","href","target","rel","onToggleMode","backgroundColor","height","map","item","WorksContext","createContext","WorksProvider","works","setWorks","useEffect","axios","get","URL","then","res","data","records","err","console","log","Provider","value","children","Works","useContext","worksDom","primaryimageurl","src","alt","ModesContext","light","color","dark","App","windowHeight","setDimensions","modes","setMode","updateDimensions","window","addEventListener","removeEventListener","innerWidth","innerHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fda52d1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"../css/Header.css\";\n\nconst Header = (props) => {\n    const [tabs, setTabs] = useState([\n        {\n            id: 0,\n            title: \"Classification\",\n            list: [\n                \"(not asigned)\",\n                \"Accessories (non-art)\",\n                \"Albums\",\n                \"Amulets\",\n                \"Architectural\",\n                \"Elements\",\n                \"Archival Materials\",\n                \"Artists' Tools\",\n                \"Audiovisual Works\",\n                \"Books\",\n                \"Boxes\",\n                \"Calligraphy\",\n                \"Cameos\",\n                \"Coins\",\n                \"Drawings\",\n                \"Fragments\",\n                \"Furnishings\",\n                \"Furniture\",\n                \"Gems\",\n                \"Graphic Design\",\n            ],\n        },\n        {\n            id: 1,\n            title: \"Work Type\",\n            list: [\"work\"],\n        },\n        {\n            id: 2,\n            title: \"Technique/Medium\",\n            list: [\"teqc\"],\n        },\n        {\n            id: 3,\n            title: \"Period\",\n            list: [],\n        },\n        {\n            id: 4,\n            title: \"Place\",\n            list: [],\n        },\n        {\n            id: 5,\n            title: \"Century\",\n            list: [],\n        },\n        {\n            id: 6,\n            title: \"Culture\",\n            list: [],\n        },\n        {\n            id: 7,\n            title: \"Gallery\",\n            list: [],\n        },\n    ]);\n\n    const [lists, setLists] = useState({\n        showLists: false,\n        currentId: -1,\n        currentList: [],\n    });\n\n    var handleDropDown = (id) => {\n        var showLists = lists.showLists;\n        var currentId = lists.currentId;\n        var currentList = tabs[id].list;\n\n        if (showLists && id === currentId) {\n            showLists = false;\n        } else {\n            showLists = true;\n            currentId = id;\n        }\n\n        setLists({ showLists, currentId, currentList });\n    };\n\n    var handleSearchDropDown = () => {};\n\n    // Responsive styling\n    const mode = props.mode;\n    const width = props.dimensions.windowWidth;\n\n    // Tabs DOM\n    var tabsDom = [];\n\n    for (var i in tabs) {\n        const { id, title, list } = tabs[i];\n        tabsDom.push(\n            <div className=\"tab\" key={id} onClick={() => handleDropDown(id)}>\n                {title}\n            </div>\n        );\n    }\n\n    // Searchbar dynamic styling\n    var placeholder = \"Search by keyword, title, artist, or gallery\";\n    var inputStyle = { ...mode };\n\n    if (width <= 950) {\n        placeholder = \"Search\";\n        inputStyle.width = \"90px\";\n    }\n\n    return (\n        <div className=\"header\" style={mode}>\n            {/* Above line */}\n            <div className=\"upper\">\n                {/* Harvard Art Museums Logo */}\n                <a\n                    className=\"logo\"\n                    style={mode}\n                    href=\"https://www.harvardartmuseums.org\"\n                    target=\"__blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <h1 className=\"h\">H</h1>\n                    <span className=\"diag-line\" />\n                </a>\n\n                {/* About and Mode */}\n                <ul className=\"about-mode\">\n                    <li>\n                        <a\n                            href=\"https://github.com/eedelosreyes2/harvard-art-gallery-react\"\n                            style={mode}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            About\n                        </a>\n                    </li>\n                    <li onClick={() => props.onToggleMode()}>Mode</li>\n                </ul>\n            </div>\n\n            {/* Below line */}\n            {width <= 768 ? (\n                <div className=\"lower arrow-wrapper\">\n                    <i className=\"arrow down\" />\n                </div>\n            ) : (\n                <div className=\"lower\">\n                    {/* Tabs */}\n                    <div className=\"tabs\">{tabsDom}</div>\n\n                    {/* Searchbar */}\n                    <div className=\"search-bar\">\n                        <input placeholder={placeholder} style={inputStyle} />\n                    </div>\n                </div>\n            )}\n\n            {/* Lists */}\n            {lists.showLists ? (\n                <div\n                    className=\"list\"\n                    style={{\n                        backgroundColor: \"rebeccapurple\",\n                        height: \"40px\",\n                        width: \"100%\",\n                    }}\n                >\n                    {lists.currentList.map((item) => {\n                        return <span>{item}</span>;\n                    })}\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\nexport default Header;\n","import React, { useState, useEffect, createContext } from \"react\";\nimport axios from \"axios\";\n\nconst URL = \"https://api.harvardartmuseums.org\";\n\nexport const WorksContext = createContext();\n\nexport const WorksProvider = (props) => {\n    const [works, setWorks] = useState([]);\n\n    useEffect(() => {\n        axios\n            .get(\n                URL +\n                    \"/object?apikey=9b7b63e1-aa03-4f5d-8d56-f2c58a6a4efe&page=1&size=100\"\n                // \"/classification?apikey=9b7b63e1-aa03-4f5d-8d56-f2c58a6a4efe&size=100\"\n            )\n            .then(\n                (res) => {\n                    setWorks(res.data.records);\n                },\n                (err) => {\n                    console.log(err);\n                }\n            );\n    }, []);\n\n    return (\n        <WorksContext.Provider value={works}>\n            {props.children}\n        </WorksContext.Provider>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { WorksContext } from \"./WorksContext\";\nimport \"../css/Works.css\";\n\nconst Works = () => {\n    const works = useContext(WorksContext);\n    var worksDom = [];\n\n    for (var i in works) {\n        if (works[i].primaryimageurl) {\n            worksDom.push(\n                <div key={works[i].id} className=\"content\">\n                    <img src={works[i].primaryimageurl} alt=\"\" />\n                </div>\n            );\n        }\n    }\n\n    return <div className=\"grid\">{worksDom}</div>;\n};\n\nexport default Works;\n","import { createContext } from \"react\";\n\nexport const modes = {\n    light: {\n        backgroundColor: \"white\",\n        color: \"black\",\n    },\n    dark: {\n        backgroundColor: \"black\",\n        color: \"white\",\n    },\n};\n\nexport const ModesContext = createContext(modes);\n","import React, { useState, useEffect, useContext } from \"react\";\nimport \"./css/App.css\";\n\nimport Header from \"./components/Header\";\nimport Works from \"./components/Works\";\n// import Footer from \"./components/Footer\";\n\nimport { ModesContext } from \"./components/ModesContext\";\nimport { WorksProvider } from \"./components/WorksContext\";\n\nconst App = () => {\n    const [dimensions, setDimensions] = useState({\n        windowWidth: 0,\n        windowHeight: 0,\n    });\n    const modes = useContext(ModesContext);\n    const [mode, setMode] = useState(modes.dark);\n\n    useEffect(() => {\n        updateDimensions();\n        window.addEventListener(\"resize\", updateDimensions);\n\n        return () => {\n            window.removeEventListener(\"resize\", updateDimensions);\n        };\n    }, []);\n\n    var updateDimensions = () => {\n        let windowWidth = typeof window !== \"undefined\" ? window.innerWidth : 0;\n        let windowHeight =\n            typeof window !== \"undefined\" ? window.innerHeight : 0;\n\n        setDimensions({ windowWidth, windowHeight });\n    };\n\n    var toggleMode = () => {\n        setMode(mode === modes.dark ? modes.light : modes.dark);\n    };\n\n    return (\n        <div className=\"App\" style={mode}>\n            <Header\n                dimensions={dimensions}\n                mode={mode}\n                onToggleMode={() => toggleMode()}\n            />\n            <WorksProvider>\n                <Works />\n            </WorksProvider>\n            {/* <Footer /> */}\n        </div>\n    );\n};\n\nexport default App;\n\n/* TODO:\n- Masonry grid\n- Works transitions on device change\n- Footer\n- remove all inline css\n- sort\n*/\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}